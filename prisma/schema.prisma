// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Patient {
  id              String   @id @default(cuid())
  email           String?  
  name            String
  gender          String
  dob             String
  aadharno        String @unique
  bloodgroup      String
  hashedPassword  String?
  contactno       String
  alternatecontactno String?
  address         String
  emergencycontact String?
  prevHis          String?
  imageUrl         String?
  isVerified Boolean? @default(false)
  medHis          MedicalHistory[]
  session         PatientSession[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}
model MedicalHistory{
  id        String   @id
  userId    String
  condition String
  treatmentdetails String?
  patient Patient@relation(fields: [userId], references: [id])
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}
model PatientSession {
  id        String   @id
  userId    String
  expiresAt DateTime
  patient Patient @relation(fields: [userId], references: [id])
}

model Hospital{
  id              String   @id @default(cuid())
  name String
  licenceno String
  estyear Int
  Website String
  contactno String
  alternatecontactno String
  email String
  address String
  City String
  State String
  Zipcode String 
  noofbeds Int
  noofopds Int
  nooficu Int
  nooflabs Int
  noofdoctorsregistered Int
  anyotherdetails String?
  hashedPassword  String?
  bedsAvailable Int? @default(0)
  opdsAvailable Int? @default(0)
  icuAvailable Int? @default(0)
  labsAvailable Int? @default(0)
  doctorsAvailable Int? @default(0)
  idToLogin String @unique
  isVerified Boolean @default(false)
  hospitaldep Department[]
  session HospitalSession[]
  room Room[]
  createdAt       DateTime? @default(now())
  updatedAt       DateTime? @updatedAt
}
model Room{
  id              String   @id @default(cuid())
  userId String
  isAvailabel Boolean @default(false)
  typeof String //opd icu
  Bookedby String?
  hospital Hospital @relation(fields: [userId], references: [id])
}
model Department{
  id              String   @id @default(cuid())
  userId String
  hod String
  name String
  noOfDoctors String
  doctorsAvailable String
  hospital Hospital @relation(fields: [userId], references: [id])
  
  createdAt       DateTime? @default(now())
  updatedAt       DateTime? @updatedAt
}
model HospitalSession {
  id        String   @id
  userId    String
  expiresAt DateTime
  hospital Hospital @relation(fields: [userId], references: [id])
}